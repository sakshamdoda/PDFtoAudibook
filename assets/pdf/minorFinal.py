import sys
import io

#Files for PDF Miner:
from pdfminer.converter import TextConverter
from pdfminer.pdfinterp import PDFPageInterpreter
from pdfminer.pdfinterp import PDFResourceManager
from pdfminer.pdfpage import PDFPage

#Files for PDF OCR reader:
import fitz
from PIL import Image
import pytesseract
from pytesseract import image_to_string

#Making Image from PDF:
from pdf2image import convert_from_path

#Files for test to speech:
from gtts import gTTS

#List files in Python:
import os
from os import walk

def extractPDFText(pdfFilePath): #Returns text in the pdf
    with open(pdfFilePath , 'rb') as fh:
        completeText = ""
        for page in PDFPage.get_pages(fh , caching = True , check_extractable = True):
            resourceManager = PDFResourceManager()
            fakeFileHandle = io.StringIO()

            converter = TextConverter(resourceManager , fakeFileHandle)

            pageInterpreter = PDFPageInterpreter(resourceManager , converter)

            pageInterpreter.process_page(page)

            text = fakeFileHandle.getvalue()

            completeText += text
            completeText += " "

            converter.close()
            fakeFileHandle.close()

        return completeText

def extractPDFusingOCR(pdfFilePath , maxLimitOfPages = 100): #Returns text in the images of the pdf
    completeText = ""
    images = convert_from_path(pdfFilePath)
    for img in images:
        completeText += image_to_string(img,lang="eng")

    return completeText


saveOldPDFNames = set() #This set saves name of all old PDF files to reduce recomputation.
while(True):
    #print("LOOP START")
    listOfFiles = os.listdir()
    pdfPath = ""
    flag = 0
    for i in listOfFiles:
        l = len(i)
        if(l<=4):
            continue
        if(i[l-4:l] == '.pdf' and i not in saveOldPDFNames):
            saveOldPDFNames.add(i)
            flag = 1
            pdfPath = i
            break
    if(flag == 0):
        continue
    if(pdfPath == ""):
        continue
    print("NEW PDF FOUND:" , pdfPath)
    
    #Using Direct text extaction.
    pdfTextfromMiner = extractPDFText(pdfPath)
    print(pdfTextfromMiner)
    print("---------------------------------------------------")
    print("TEXT EXTRACTED FROM DIRECT TEXT EXTRACTION")
    print("---------------------------------------------------")

    pdfTextfromOCR = extractPDFusingOCR(pdfPath)
    print(pdfTextfromOCR)
    print("---------------------------------------------------")
    print("TEXT EXTRACTED FROM PDF IMAGE AND OCR")
    print("---------------------------------------------------")
    
    language = "en"

    choice = 3 #1: Direct Text    2:OCR    3:Both

    text1 = " ".join(pdfTextfromMiner.split())
    text2 = " ".join(pdfTextfromOCR.split())
    text3 = text1 + " NOW READING TEXT GENERATED BY OCR " + text2

    textToBeUsed = text1
    if(choice == 2):
        textToBeUsed = text2
    
    if(choice == 3):
        textToBeUsed = text3

    print("VALUE OF CHOICE IS",choice)
    output = gTTS(text = textToBeUsed , lang = language , slow = False)
    #Now saving output to an MP3 file
    output.save("../audio/song.mp3")




















